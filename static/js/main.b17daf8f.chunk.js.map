{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","nextIsX","i","this","handleClick","calculateWinner","slice","setState","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"yOAIA,SAASA,EAAOC,GACV,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,O,IAKTC,E,kDACJ,WAAYJ,GAAQ,IAAD,8BACf,cAAMA,IACDK,MAAQ,CACTC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJE,E,yDAQNC,GAAI,IAAD,OACd,OACM,kBAACX,EAAD,CAAQI,MAAOQ,KAAKN,MAAMC,QAAQI,GAC9BR,QAAU,kBAAM,EAAKU,YAAYF,Q,kCAKjCA,GACR,IAAIG,EAAgBF,KAAKN,MAAMC,WAAYK,KAAKN,MAAMC,QAAQI,GAA9D,CAGA,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQQ,QACnCR,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAM,IACxCE,KAAKI,SAAS,CACVT,QAASA,EACTG,SAAUE,KAAKN,MAAMI,a,+BAKzB,IACIO,EADEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAQ5C,OALMU,EADAC,EACSA,EAAS,YAET,iBAAmBN,KAAKN,MAAMI,QAAU,IAAM,KAI3D,6BACE,yBAAKR,UAAU,UAAUe,GACzB,yBAAKf,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,S,GAtDTC,IAAMC,WA6DpBC,E,uKAEF,OACE,yBAAKpB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,OAEF,yBAAKH,UAAU,aACb,8BACA,mC,GATSkB,IAAMC,WAgBzB,SAASP,EAAgBP,GAWvB,IAVA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACnBY,EAAMZ,GADa,GAC9Bc,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACpE,OAAOpB,EAAQkB,GAGnB,OAAO,KAKTG,IAASC,OACP,kBAACP,EAAD,MACAQ,SAASC,eAAe,W","file":"static/js/main.b17daf8f.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n      return (\n        <button className=\"square\" onClick={props.onClick}>\n          {props.value}\n        </button>\n      );\n    }\n  \n  class Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            nextIsX: true,\n        }\n    }\n\n    renderSquare(i) {\n      return (\n            <Square value={this.state.squares[i]} \n                onClick={ () => this.handleClick(i)}\n            />\n      );\n    }\n\n    handleClick(i) {\n        if (calculateWinner(this.state.squares) || this.state.squares[i]) {\n            return;\n        }\n        const squares = this.state.squares.slice();\n        squares[i] = this.state.nextIsX ? 'X' : 'O';\n        this.setState({\n            squares: squares,\n            nextIsX: !this.state.nextIsX,\n        });\n    }\n  \n    render() {\n        const winner = calculateWinner(this.state.squares);\n        let status;\n        if (winner) {\n            status = winner + \" has won!\";\n        } else {\n            status = 'Next player: ' + (this.state.nextIsX ? 'X' : 'O');\n        }\n  \n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}